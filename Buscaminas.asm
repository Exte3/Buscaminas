.data #Este lugar se dejan las variables locales

#Hacer tablero estructura


#Hacer función random
#Hacer imagenes
#bomba sera la banderita

#Globales de pantalla
display: .word 0:131072
bomba:0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xd8a800, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xd8f000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xd8a800, 0xd8f000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x080808, 0x080808, 0x080808, 0x080808, 0x000000, 0x000000, 0xd8f000, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0x080808, 0x303030, 0x505050, 0x505050, 0x303030, 0x181818, 0x303030, 0x909090, 0x686868, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x000000, 0x080808, 0x303030, 0x686868, 0x909090, 0x909090, 0x686868, 0x505050, 0x303030, 0x686868, 0x303030, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x000000, 0x303030, 0x686868, 0x909090, 0xd0d0d0, 0xd0d0d0, 0x909090, 0x686868, 0x303030, 0x181818, 0x080808, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x080808, 0x303030, 0x686868, 0x909090, 0xd0d0d0, 0xd0d0d0, 0x909090, 0x686868, 0x303030, 0x181818, 0x181818, 0x080808, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x080808, 0x303030, 0x505050, 0x686868, 0x909090, 0x909090, 0x686868, 0x505050, 0x181818, 0x181818, 0x181818, 0x080808, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x080808, 0x181818, 0x303030, 0x505050, 0x505050, 0x505050, 0x505050, 0x303030, 0x181818, 0x181818, 0x181818, 0x080808, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x000000, 0x080808, 0x181818, 0x303030, 0x303030, 0x303030, 0x303030, 0x181818, 0x181818, 0x181818, 0x080808, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x000000, 0x080808, 0x181818, 0x181818, 0x181818, 0x181818, 0x181818, 0x181818, 0x181818, 0x181818, 0x080808, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0x080808, 0x080808, 0x181818, 0x181818, 0x181818, 0x181818, 0x080808, 0x080808, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x080808, 0x080808, 0x080808, 0x080808, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x01000000, 0x01000000
explosion:0xab0002, 0xa90003, 0xa20004, 0xa40106, 0xa90004, 0xad0000, 0xb70000, 0xc40000, 0xc40000, 0xb40000, 0xb30001, 0xa50000, 0x9f0003, 0xa50508, 0xa60002, 0xa90000, 0x01000000, 0xa40000, 0xac0404, 0xa70000, 0xa60000, 0xaa0000, 0xbc0900, 0xc81600, 0xdd2a04, 0xdc2905, 0xca1800, 0xb90500, 0xad0000, 0xa60000, 0xa10000, 0xa90101, 0xa70001, 0x01000000, 0xa50603, 0xa30000, 0xd92712, 0xbf0900, 0xd71e00, 0xea3e01, 0xf45f05, 0xec6100, 0xf16600, 0xf25d03, 0xe63a00, 0xd82100, 0xbd0600, 0xd82814, 0xa50100, 0xa30401, 0x01000000, 0xa00100, 0xa30000, 0xbe0800, 0xff5920, 0xed4c00, 0xff7cf, 0xff9e18, 0xffac19, 0xffa714, 0xffa720, 0xff7a0d, 0xea4800, 0xff5c23, 0xba0300, 0xa40000, 0xa10200, 0x01000000, 0xa60000, 0xaf0200, 0xd72000, 0xec4b00, 0xffb228, 0xf8b10c, 0xffda34, 0xffe43f, 0xffe43f, 0xffd630, 0xfab30e, 0xffb42a, 0xea4800, 0xd72000, 0xad0000, 0xaa0000, 0x01000000, 0xaf0000, 0xb70600, 0xe43800, 0xff7c10, 0xfab30e, 0xffe834, 0xfff863, 0xede661, 0xefe863, 0xfff560, 0xffe633, 0xfeb711, 0xfe760b, 0xea3e01, 0xbc0a00, 0xab0000, 0x01000000, 0xb70000, 0xc51200, 0xf55f09, 0xffa01f, 0xffda39, 0xfff25e, 0xebe390, 0xffffcd, 0xfcf6c2, 0xfbf3a0, 0xfdee5d, 0xffd836, 0xffa523, 0xee5801, 0xc81600, 0xb80000, 0x01000000, 0xbf0000, 0xdc2b06, 0xf36705, 0xffa71b, 0xffe142, 0xefe866, 0xffffce, 0xede9de, 0xf7f3e8, 0xf8f2c0, 0xfbf472, 0xffdd3f, 0xffaa1e, 0xf16503, 0xdb2804, 0xc30000, 0x01000000, 0xbf0000, 0xdb2a05, 0xef6301, 0xffad20, 0xffdc3e, 0xf6ef6d, 0xf8f5c2, 0xfffef2, 0xf5f3e7, 0xf9f6c3, 0xf7f06e, 0xffdf40, 0xffae21, 0xef6301, 0xdc2905, 0xbf0000, 0x01000000, 0xbb0000, 0xc51200, 0xf35d06, 0xffa220, 0xffdc3b, 0xf0e24f, 0xfffaa6, 0xfaf7c2, 0xffffcb, 0xece692, 0xfff564, 0xffdb3a, 0xff9c1b, 0xf25c05, 0xc91800, 0xb70000, 0x01000000, 0xac0000, 0xbb0b00, 0xeb3f02, 0xfe760b, 0xfcb5f, 0xffe935, 0xf9eb56, 0xf0e964, 0xece862, 0xfffe68, 0xffe230, 0xfab510, 0xff7bf, 0xe53c00, 0xb80a00, 0xac0000, 0x01000000, 0xa90100, 0xac0000, 0xd62000, 0xed4c00, 0xffb127, 0xf9b20d, 0xffda34, 0xffe23d, 0xffe33d, 0xffd932, 0xf5b00b, 0xffb429, 0xec4d00, 0xd52000, 0xab0000, 0xa60100, 0x01000000, 0xa20000, 0xa10000, 0xc10b00, 0xff541c, 0xed4c00, 0xff7e10, 0xffa31d, 0xffab18, 0xffac18, 0xffa01a, 0xff8011, 0xe94b00, 0xff5a20, 0xbc0a00, 0xa30000, 0x9f0400, 0x01000000, 0xa50301, 0xa90200, 0xd72410, 0xc20c00, 0xd51c00, 0xe63a00, 0xf45f05, 0xee6500, 0xef6600, 0xf66209, 0xe13800, 0xd22000, 0xba0800, 0xd22710, 0xa20100, 0x9f0400, 0x01000000, 0xa90002, 0xac0203, 0xa30000, 0xa50000, 0xaf0000, 0xbb0800, 0xc51200, 0xdc2b04, 0xd92803, 0xc61500, 0xb70900, 0xaf0400, 0xa30000, 0xa10000, 0xa70503, 0xa00000, 0x01000000, 0xa90000, 0xa90002, 0xa30005, 0xa50208, 0xa60001, 0xb00000, 0xb60000, 0xc10000, 0xc10000, 0xb30000, 0xbe0cf, 0xb71116, 0xb01518, 0xb81d1e, 0xb51216, 0xae090b, 0x01000000, 0x01000000
casilla:0x000203, 0x010602, 0x050700, 0x030600, 0x131200, 0x050300, 0x050100, 0x0b0602, 0x0e0905, 0x0b0700, 0x060400, 0x0e1000, 0x050600, 0x020600, 0x000100, 0x000405, 0x01000000, 0x000002, 0x010300, 0x020400, 0x040600, 0x060600, 0x090700, 0x0d0a00, 0x080400, 0x0b0500, 0x110e00, 0x090700, 0x030300, 0x040600, 0x020400, 0x000100, 0x000203, 0x01000000, 0x040404, 0x000100, 0x181b08, 0x55583b, 0x50512f, 0x4e4e2a, 0x514e2d, 0x514e2f, 0x524d2f, 0x524f2e, 0x4c4c28, 0x4e4f2d, 0x56593c, 0x191c09, 0x000100, 0x060807, 0x01000000, 0x040203, 0x020200, 0x575941, 0xf4f6cf, 0xfdffce, 0xf9f9c5, 0xf7f5c2, 0xfcfac7, 0xfdfac7, 0xf7f5c2, 0xf8f8c4, 0xfcfecd, 0xf5f7d0, 0x585a42, 0x030300, 0x030303, 0x01000000, 0xf0b0a, 0x070500, 0x525334, 0xf3f5c4, 0xeeeeae, 0xf3f3ab, 0xf4f4aa, 0xf3f4a8, 0xf8f6ab, 0xf4f4aa, 0xf2f2aa, 0xeeeeae, 0xf3f5c4, 0x535435, 0x060400, 0x090806, 0x01000000, 0x090504, 0x060200, 0x545430, 0xfdfec5, 0xf4f5a9, 0xfefea6, 0xfeffa1, 0xf7f998, 0xfdfd9d, 0xfeffa1, 0xfdfda5, 0xf5f6aa, 0xfeffc6, 0x545430, 0x050100, 0x030000, 0x01000000, 0x0e0906, 0x060300, 0x504e27, 0xfcfcbc, 0xf4f7a0, 0xfafd96, 0xfeff92, 0xfdff8d, 0xffff90, 0xfbfd8f, 0xf8fb94, 0xf5f8a1, 0xfdfdbd, 0x525029, 0x070400, 0x070200, 0x01000000, 0x0a0502, 0x0a0700, 0x535027, 0xfcfdbb, 0xf9fa9d, 0xffff95, 0xffff8f, 0xfeff85, 0xffff86, 0xfcff88, 0xfdff92, 0xf8fc9e, 0xfdfcbb, 0x56542b, 0x0e0800, 0x040000, 0x01000000, 0x0c0704, 0x040100, 0x4f4c23, 0xfdfebc, 0xf8f89e, 0xfbff91, 0xffff8e, 0xffff8a, 0xffff8a, 0xffff8d, 0xf9fb90, 0xf4f79c, 0xfffebd, 0x535128, 0x080200, 0x080300, 0x01000000, 0x0d0707, 0x090500, 0x52502a, 0xfbfbbd, 0xf4f6a2, 0xfcfe99, 0xffff94, 0xfcff8e, 0xfefe8e, 0xfeff93, 0xfafc97, 0xf1f39f, 0xfdfdbf, 0x56542e, 0x090500, 0x090401, 0x01000000, 0x090506, 0x080400, 0x535233, 0xffffc9, 0xf9f9b1, 0xfefea8, 0xfafb9e, 0xf9fa9c, 0xfbfa9d, 0xfbfc9f, 0xfdfda7, 0xf8f8b0, 0xffffca, 0x565536, 0x070300, 0x040000, 0x01000000, 0x070206, 0x050200, 0x515137, 0xf5f6ca, 0xf8f8bc, 0xfaf9b6, 0xf6f6ae, 0xfcfcb2, 0xfffeb4, 0xf8f8b0, 0xfaf9b6, 0xf7f7bb, 0xf5f6ca, 0x525238, 0x040100, 0x010000, 0x01000000, 0x060409, 0x0b0a06, 0x484a35, 0xc4c5a3, 0xcacb9f, 0xd0cf9f, 0xcfcd9d, 0xd2d0a0, 0xd4d0a1, 0xd1cf9f, 0xd2d1a1, 0xcacb9f, 0xc4c5a3, 0x484a35, 0x090804, 0x000002, 0x01000000, 0x08070d, 0x000000, 0x000200, 0x141600, 0x040500, 0x060500, 0x0b0700, 0x0a0600, 0x0a0400, 0x0c0800, 0x080700, 0x040500, 0x141600, 0x000200, 0x000000, 0x030408, 0x01000000, 0x000008, 0x040507, 0x050700, 0x070800, 0x080700, 0x070400, 0x080400, 0x040000, 0x060000, 0x080400, 0x080500, 0x070600, 0x060700, 0x060800, 0x040507, 0x000005, 0x01000000, 0x000007, 0x000304, 0x020300, 0x000200, 0x0b0900, 0x030000, 0x060100, 0x0a0406, 0x060002, 0x050000, 0x030000, 0x090a00, 0x010100, 0x020500, 0x020307, 0x000007, 0x01000000, 0x01000000

#Globales de leertxt
buffer: .byte 0:100
archivo: .asciiz "prueba.txt"


.text #Aqui se pone el codigo

leertxt:
la $a0, archivo
addi $a1, $zero, 0  # flags: 0 leer, 1 escribir, 9 append
addi $a2, $zero, 0  # el modo no importa, es ignorado por MARS
addi $v0, $zero, 13 # la syscall 13 abre el archivo
syscall
add $t0, $zero, $v0 # copiamos el descriptor de archivo
add $a0, $zero, $t0
la $a1, buffer
addi $a2, $zero, 100
addi $v0, $zero, 14 # leemos desde el archivo
syscall
la $a0, buffer
addi $v0, $zero, 4
syscall

pantalla:

la $a0, explosion  # la direccion del rombo
la $a1, display     # la direcion del display
# Aqui hacer la funcion de recursividad, modificando el $a1 se puede mover la posicion
add $t3, $t3, $zero
addi $t4, $t4, 0
hola:
#addi $t4, $t4, 64
add $a1, $a1, $t4
addi $t4, $t4, 64
jal MOSTRAR         # llamamos a mostrar
j hola



# $a0 direccion del array
# $a1 direcion de inicio del display

# 64 es lo que se debe sumar para desplazarce hacia derecha y abajo
MOSTRAR:
add $t6, $a0, $zero		# t6 direccion del array
add $t7, $a1, $zero
##addi $t6, $t6, 64		# t7 direccion del display
addi $t5, $zero, 0		# columna actual


WHILE_COLUMNA:                     # mientras mostremos una columna
lw $t1, 0($t6)                     # cargamos la palabra de la direccion de memoria del array
beq $t1, 0x01000000, SALTAR_FILA   # si nos encontramos con un cero hay que saltar a la siguiente fila
sw $t1, 0($t7)                     # si no nos saltamos la fila, entonces copiamos el valor al display
addi $t6, $t6, 4                   # nos movemos una palabra en el array
addi $t7, $t7, 4                   # nos movemos una palabra en el display
j WHILE_COLUMNA

SALTAR_FILA:                        # Nos vamos a saltar una fila, pero debemos revisar si no hemos terminado (dos ceros seguidos)
addi $t6, $t6, 4                    # Nos movemos al siguiente elemento del array
lw $t1, 0($t6)                      # cargamos el siguiente elemento del array
#Aqui hay que poner el multiplicador en una iteracion

beq $t1, 0x01000000, FIN_MOSTRAR    # ¿Hay un cero?, entonces encontramos dos ceros seguidos y terminamos

addi $t5, $t5, 1                    # ¿no encontramos un cero?, entonces nos movemos a la siguiente columa

mul $t1, $t5, 2048                  # la direccion de la siguiente columna es: NUMERO_COLUMNA * 2048), 2048 ya que es un array de words: 4*512

add $t7, $a1, $t1                   # la nueva direccion del display es: NUMERO_COLUMNA * 2048 + Display => offset + display
j WHILE_COLUMNA                     # mostramos la siguiente columa

FIN_MOSTRAR:                        # Encontramos los dos ceros seguidos asi que terminamos

jr $ra                              # retornamos



FIN:
